{"ast":null,"code":"import axios from \"axios\";\nexport const orderAction = (token, amount) => async (dispatch, getState) => {\n  dispatch({\n    type: \"ORDER_REQUEST\"\n  });\n  const cartItem = getState().addToCartReducers.cartItem;\n  const user = getState().userLoginReducer.user;\n  const data = {\n    token,\n    amount,\n    cartItem,\n    user\n  };\n  try {\n    const response = await axios.post(\"/api/order/placeorder\", data);\n    //console.log(response)  --- for checking\n    dispatch({\n      type: \"ORDER_SUCCESS\"\n    });\n  } catch (error) {\n    //console.log(error); --- for checking\n    dispatch({\n      type: \"ORDER_FAILED\"\n    });\n  }\n};\nexport const allOrderAction = () => async (dispatch, getState) => {\n  dispatch({\n    type: \"ALL_ORDER_REQUEST\"\n  });\n  const user = getState().userLoginReducer.user;\n  try {\n    const orders = await axios.post(\"/api/order/userorders\", {\n      userid: user._id\n    });\n    //console.log(orders.data.length);\n    if (orders.data.length !== 0) dispatch({\n      type: \"ALL_ORDER_SUCCESS\",\n      payload: orders.data\n    });else dispatch({\n      type: \"ALL_ORDER_SUCCESS\",\n      payload: null\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"ALL_ORDER_FAILED\",\n      payload: error\n    });\n  }\n};\nexport const allAdminOrdersAction = () => async dispatch => {\n  dispatch({\n    type: \"ALL_ADMIN_ORDER_REQUEST\"\n  });\n  try {\n    const response = await axios.get(\"/api/order/allorders\");\n    dispatch({\n      type: \"ALL_ADMIN_ORDER_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"ALL_ADMIN_ORDER_FAILED\",\n      payload: error\n    });\n  }\n};\nexport const orderUpdateAction = (id, dp) => async dispatch => {\n  console.log(id);\n  dispatch({\n    type: \"ORDER_UPDATE_REQUEST\"\n  });\n  try {\n    const response = await axios.post(\"/api/order/updateorder\", {\n      id,\n      dp\n    });\n    console.log(response);\n    alert(\"Ordered Updated! Please refresh the page\");\n    dispatch({\n      type: \"ORDER_UPDATE_SUCCESS\"\n    });\n  } catch {\n    dispatch({\n      type: \"ORDER_UPDATE_FAILED\"\n    });\n  }\n};\nexport const orderUpdateStatusAction = (id, status) => async dispatch => {\n  dispatch({\n    type: \"ORDER_UPDATE_REQUEST\"\n  });\n  try {\n    const response = await axios.post(\"/api/order/updatestatus\", {\n      id,\n      status\n    });\n    console.log(response);\n    alert(\"Ordered delivered sucessfully! Please refresh the page\");\n    dispatch({\n      type: \"ORDER_UPDATE_SUCCESS\"\n    });\n  } catch {\n    dispatch({\n      type: \"ORDER_UPDATE_FAILED\"\n    });\n  }\n};","map":{"version":3,"names":["axios","orderAction","token","amount","dispatch","getState","type","cartItem","addToCartReducers","user","userLoginReducer","data","response","post","error","allOrderAction","orders","userid","_id","length","payload","console","log","allAdminOrdersAction","get","orderUpdateAction","id","dp","alert","orderUpdateStatusAction","status"],"sources":["D:/reactapp/pizzaApp/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const orderAction = (token, amount) => async (dispatch, getState) => {\r\n  dispatch({ type: \"ORDER_REQUEST\" });\r\n  const cartItem = getState().addToCartReducers.cartItem;\r\n  const user = getState().userLoginReducer.user;\r\n  const data = { token, amount, cartItem, user };\r\n  try {\r\n    const response = await axios.post(\"/api/order/placeorder\", data);\r\n    //console.log(response)  --- for checking\r\n    dispatch({ type: \"ORDER_SUCCESS\" });\r\n  } catch (error) {\r\n    //console.log(error); --- for checking\r\n    dispatch({ type: \"ORDER_FAILED\" });\r\n  }\r\n};\r\n\r\nexport const allOrderAction = () => async (dispatch, getState) => {\r\n  dispatch({ type: \"ALL_ORDER_REQUEST\" });\r\n  const user = getState().userLoginReducer.user;\r\n  try {\r\n    const orders = await axios.post(\"/api/order/userorders\", {\r\n      userid: user._id,\r\n    });\r\n    //console.log(orders.data.length);\r\n    if (orders.data.length !== 0)\r\n      dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    else dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: null });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: \"ALL_ORDER_FAILED\", payload: error });\r\n  }\r\n};\r\n\r\nexport const allAdminOrdersAction = () => async (dispatch) => {\r\n  dispatch({ type: \"ALL_ADMIN_ORDER_REQUEST\" });\r\n  try {\r\n    const response = await axios.get(\"/api/order/allorders\");\r\n    dispatch({ type: \"ALL_ADMIN_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ALL_ADMIN_ORDER_FAILED\", payload: error });\r\n  }\r\n};\r\n\r\nexport const orderUpdateAction = (id, dp) => async (dispatch) => {\r\n  console.log(id);\r\n  dispatch({ type: \"ORDER_UPDATE_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/order/updateorder\", { id, dp });\r\n    console.log(response);\r\n    alert(\"Ordered Updated! Please refresh the page\");\r\n    dispatch({ type: \"ORDER_UPDATE_SUCCESS\" });\r\n  } catch {\r\n    dispatch({ type: \"ORDER_UPDATE_FAILED\" });\r\n  }\r\n};\r\n\r\nexport const orderUpdateStatusAction = (id, status) => async (dispatch) => {\r\n  dispatch({ type: \"ORDER_UPDATE_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/order/updatestatus\", {\r\n      id,\r\n      status,\r\n    });\r\n    console.log(response);\r\n    alert(\"Ordered delivered sucessfully! Please refresh the page\");\r\n    dispatch({ type: \"ORDER_UPDATE_SUCCESS\" });\r\n  } catch {\r\n    dispatch({ type: \"ORDER_UPDATE_FAILED\" });\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}