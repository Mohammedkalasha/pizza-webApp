{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from '@redux-devtools-extension';\nimport { getAllPizzasReducer, addPizzaReducer, getPizzaByIdReducer, editPizzaReducer } from './reducers/pizzaReducers';\nimport { cartReducer } from './reducers/cartReducer';\nimport { loginUserReducer, registerUserReducer, getAllUsersReducer } from './reducers/userReducer';\nimport { placeOrderReducer, getUserOrdersReducer, getAllOrdersReducer } from './reducers/orderReducer';\nconst finalReducer = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer,\n  getUserOrdersReducer: getUserOrdersReducer,\n  addPizzaReducer: addPizzaReducer,\n  getPizzaByIdReducer: getPizzaByIdReducer,\n  editPizzaReducer: editPizzaReducer,\n  getAllOrdersReducer: getAllOrdersReducer,\n  getAllUsersReducer: getAllUsersReducer\n});\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null;\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","getAllPizzasReducer","addPizzaReducer","getPizzaByIdReducer","editPizzaReducer","cartReducer","loginUserReducer","registerUserReducer","getAllUsersReducer","placeOrderReducer","getUserOrdersReducer","getAllOrdersReducer","finalReducer","cartItems","localStorage","getItem","JSON","parse","currentUser","initialState","composeEnhancers","store"],"sources":["D:/reactapp/pizzaApp/frontend/src/store.js"],"sourcesContent":["import {combineReducers} from 'redux'\r\n\r\nimport {createStore , applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport {composeWithDevTools} from '@redux-devtools-extension'\r\nimport { getAllPizzasReducer , addPizzaReducer , getPizzaByIdReducer , editPizzaReducer} from './reducers/pizzaReducers'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { loginUserReducer, registerUserReducer  , getAllUsersReducer} from './reducers/userReducer'\r\nimport { placeOrderReducer , getUserOrdersReducer , getAllOrdersReducer } from './reducers/orderReducer'\r\n\r\n\r\nconst finalReducer = combineReducers({\r\n    getAllPizzasReducer : getAllPizzasReducer,\r\n    cartReducer : cartReducer,\r\n    registerUserReducer : registerUserReducer,\r\n    loginUserReducer:loginUserReducer,\r\n    placeOrderReducer : placeOrderReducer,\r\n    getUserOrdersReducer : getUserOrdersReducer,\r\n    addPizzaReducer : addPizzaReducer,\r\n    getPizzaByIdReducer : getPizzaByIdReducer,\r\n    editPizzaReducer : editPizzaReducer,\r\n    getAllOrdersReducer : getAllOrdersReducer,\r\n    getAllUsersReducer : getAllUsersReducer\r\n})\r\n\r\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\r\n\r\nconst initialState = {\r\n     cartReducer : {\r\n        cartItems: cartItems\r\n     },\r\n     loginUserReducer :{\r\n         currentUser : currentUser\r\n     }\r\n}\r\n\r\nconst composeEnhancers= composeWithDevTools({})\r\n\r\nconst store = createStore(finalReducer , initialState , composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store"],"mappings":"AAAA,SAAQA,eAAe,QAAO,OAAO;AAErC,SAAQC,WAAW,EAAGC,eAAe,QAAO,OAAO;AACnD,OAAOC,KAAK,MAAM,aAAa;AAE/B,SAAQC,mBAAmB,QAAO,2BAA2B;AAC7D,SAASC,mBAAmB,EAAGC,eAAe,EAAGC,mBAAmB,EAAGC,gBAAgB,QAAO,0BAA0B;AACxH,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAIC,kBAAkB,QAAO,wBAAwB;AACnG,SAASC,iBAAiB,EAAGC,oBAAoB,EAAGC,mBAAmB,QAAQ,yBAAyB;AAGxG,MAAMC,YAAY,GAAGhB,eAAe,CAAC;EACjCK,mBAAmB,EAAGA,mBAAmB;EACzCI,WAAW,EAAGA,WAAW;EACzBE,mBAAmB,EAAGA,mBAAmB;EACzCD,gBAAgB,EAACA,gBAAgB;EACjCG,iBAAiB,EAAGA,iBAAiB;EACrCC,oBAAoB,EAAGA,oBAAoB;EAC3CR,eAAe,EAAGA,eAAe;EACjCC,mBAAmB,EAAGA,mBAAmB;EACzCC,gBAAgB,EAAGA,gBAAgB;EACnCO,mBAAmB,EAAGA,mBAAmB;EACzCH,kBAAkB,EAAGA;AACzB,CAAC,CAAC;AAEF,MAAMK,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAExG,MAAMG,WAAW,GAAGJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI;AAEhH,MAAMI,YAAY,GAAG;EAChBd,WAAW,EAAG;IACXQ,SAAS,EAAEA;EACd,CAAC;EACDP,gBAAgB,EAAE;IACdY,WAAW,EAAGA;EAClB;AACL,CAAC;AAED,MAAME,gBAAgB,GAAEpB,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAE/C,MAAMqB,KAAK,GAAGxB,WAAW,CAACe,YAAY,EAAGO,YAAY,EAAGC,gBAAgB,CAACtB,eAAe,CAACC,KAAK,CAAC,CAAC,CAAC;AAEjG,eAAesB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}